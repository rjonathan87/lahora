{"version":3,"sources":["App.js","index.js"],"names":["App","resolvedOptions","Intl","DateTimeFormat","urlmytimezone","timeZone","useState","timeApi","setTimeApi","timeLocal","setTimeLocal","gettimezone","a","fetch","then","r","json","d","datetime","Digital","console","log","day","Date","getDay","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLA8CeA,MA5Cf,WAEE,IAAIC,EAAkBC,KAAKC,iBAAiBF,kBACxCG,EAAa,+CAA2CH,EAAgBI,UAH/D,EAKiBC,qBALjB,mBAKNC,EALM,KAKGC,EALH,OAMqBF,qBANrB,mBAMNG,EANM,KAMKC,EANL,KAQPC,EAAW,uCAAG,sBAAAC,EAAA,sEACZC,MAAMT,GACTU,MAAM,SAAAC,GAAC,OAAIA,EAAEC,UACbF,MAAM,SAAAG,GAAC,OAAIT,EAAYS,EAAEC,aACzBJ,MAAM,WACL,IAAIK,EAAU,GACdC,QAAQC,IAAId,GACZa,QAAQC,WAAWd,GAInB,IAAIe,GAFJH,EAAU,IAAII,KAAKhB,IAECiB,SAAW,GAAnB,WAA4BL,EAAQK,UAAaL,EAAQK,SACjEC,EAAQN,EAAQO,WAAa,EACjCD,EAAQA,EAAQ,GAAR,WAAiBA,GAAUA,EACnC,IAAIE,EAAOR,EAAQS,cACfC,EAAQV,EAAQW,WAAa,GAArB,WAA8BX,EAAQW,YAAeX,EAAQW,WACrEC,EAAUZ,EAAQa,aAAe,GAAvB,WAAgCb,EAAQa,cAAiBb,EAAQa,aAC3EC,EAAUd,EAAQe,aAAe,GAAvB,WAAgCf,EAAQe,cAAiBf,EAAQe,aAE/ExB,EAAa,GAAD,OAAKY,EAAL,YAAYG,EAAZ,YAAqBE,EAArB,YAA6BE,EAA7B,YAAsCE,EAAtC,YAAiDE,OAnB/C,2CAAH,qDA4BjB,OALAE,qBAAW,WACTxB,MAEC,IAGD,qCACE,6CAAgBV,EAAgBI,YAChC,4BAAKI,QCrCX2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c2a35e01.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\"\n\nfunction App() {\n\n  let resolvedOptions = Intl.DateTimeFormat().resolvedOptions()\n  let urlmytimezone = `http://worldtimeapi.org/api/timezone/${resolvedOptions.timeZone}`\n\n  const [timeApi, setTimeApi] = useState();\n  const [timeLocal, setTimeLocal] = useState()\n\n  const gettimezone = async () => {\n    await fetch(urlmytimezone)\n      .then( r => r.json() )\n      .then( d => setTimeApi( d.datetime ) )\n      .then( () => {\n        let Digital = '';\n        console.log(timeApi)\n        console.log(typeof timeApi)\n\n        Digital = new Date(timeApi);\n\n        let day   = Digital.getDay() < 10 ? `0${Digital.getDay()}` : Digital.getDay()\n        let month = Digital.getMonth() + 1\n        month = month < 10 ? `0${month}` : month\n        let year = Digital.getFullYear()\n        let hours = Digital.getHours() < 10 ? `0${Digital.getHours()}` : Digital.getHours()\n        let minutes = Digital.getMinutes() < 10 ? `0${Digital.getMinutes()}` : Digital.getMinutes()\n        let seconds = Digital.getSeconds() < 10 ? `0${Digital.getSeconds()}` : Digital.getSeconds()\n\n        setTimeLocal( `${day}-${month}-${year} ${hours}:${minutes}:${seconds}` )\n      })\n  }\n\n  useEffect( () => {\n    gettimezone()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <>\n      <h2>La hora en {resolvedOptions.timeZone}</h2>\n      <p>{ timeLocal }</p>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}